<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="RouteMapper">
	<!-- insert -->
	<insert id="insertRoute" parameterType="Route">
	insert into route values (route_num_seq.nextval,
								#{routeName},
								#{content},sysdate)
	</insert>
	
	<insert id="insertTempRoute" parameterType="TempRoute">
	insert into temp_route values (route_num_seq.currval,
									#{reviewNum},
									#{orderOfStore})
	</insert>
	
	<insert id="updateTempRoute" parameterType="TempRoute">
	insert into temp_route values (#{routeNum}, #{reviewNum}, #{orderOfStore})
	</insert>
	
	
	<!-- update -->
	<update id="updateRoute" parameterType="Route">
		UPDATE route
		SET	   route_name = #{routeName},
			   content = #{content}
	    WHERE  route_num = #{routeNum}
	</update>
	
	<!-- delete -->
	<delete id="deleteTempRoute" parameterType="int">
		DELETE FROM temp_route
		WHERE route_num = #{routeNum}
	</delete>
	
	
	
	<!-- resultMap -->
	<resultMap type="Route" id="Route-Review-join-resultmap">
		<id column="route_num" property="routeNum"/>
		<result column="route_name" property="routeName"/>
		<result column="content" property="content"/>
		<result column = "write_date" property="writeDate"/>
		<collection property="tempRouteList" ofType="TempRoute">
			<result column="route_num" property="routeNum"/>
			<result column="review_num" property="reviewNum"/>
			<result column="order_of_store" property="orderOfStore"/>
			<association property="review" javaType="Review">
				<id column="review_num" property="reviewNum"/>
				<result column="address" property="address"/>
				<result column="store_name" property="storeName"/>
				<result column="title" property="title"/>
				<result column="pos_x" property="posX"/>
				<result column="pos_y" property="posY"/>
				<association property="member" javaType="Member">
					<id column="email" property="email"/>
					<result column="nickname" property="nickname"/>
				</association>
			</association>
		</collection>
	</resultMap>
	
	<!-- select -->
	<select id="getAllRouteNum" resultType="_int" parameterType="map">
	select r.route_num
	
	from route r, temp_route tr, review rv
	where r.route_num = tr.route_num(+)
	and tr.review_num = rv.review_num(+)
	and rv.store_name = #{storeName}
	and rv.pos_x = #{posX}
	and rv.pos_y = #{posY}
	order by r.route_num asc

	</select>
	
	<select id="getRouteNumByEmail" resultType="_int" parameterType="map">
	<![CDATA[	
	select route_num
	from(
		select rownum rn, route_num
		from(	
			select route_num from route 
			where route_num 
			in (
			
			select r.route_num
			from route r, temp_route tr, review rv 
			where rv.email = #{email}
			and r.route_num = tr.route_num
			and tr.review_num = rv.review_num
			
			)
			order by route_num desc
			) 
		where rownum <= #{end}
		)
	where rn >= #{begin}		
	]]>

	</select>
	
	<select id="selectRouteCount" resultType="_int" parameterType="String">
		select count(*) from route 
		where route_num 
		in (
		
		select r.route_num
		from route r, temp_route tr, review rv 
		where rv.email = #{value}
		and r.route_num = tr.route_num(+)
		and tr.review_num = rv.review_num(+)		
		)
	</select>
	
	
	
	<select id="selectRouteNum" resultType="int">
		select route_num 
		from route 
		order by route_num desc
	</select>
	
	<select id="getAllRoute" resultMap="Route-Review-join-resultmap" parameterType="map">
	select *
	from route r, temp_route tr, review rv, member m
	where r.route_num = tr.route_num(+)
	and tr.review_num = rv.review_num(+)
	
	and rv.store_name = #{storeName}
	and rv.pos_x = #{posX}
	and rv.pos_y = #{posY}
	order by r.route_num asc
	</select>
	
	
	
	<select id="selectRouteByNum" parameterType="_int" resultMap="Route-Review-join-resultmap">
	select *
	from route r, temp_route tr, review rv, member m
	where r.route_num = tr.route_num(+)
	and tr.review_num = rv.review_num(+)
	and rv.email = m.email(+)
	and r.route_num = #{value}
	order by tr.order_of_store asc
	
	</select>
	
	<select id="selectRouteByEmail" parameterType="string" resultMap = "Route-Review-join-resultmap">
	
	select *
	from route r, temp_route tr, review rv, member m
	where r.route_num = tr.route_num(+)
	and tr.review_num = rv.review_num(+)
	and rv.email = m.email(+)
	and m.email=#{value}
	order by tr.order_of_store asc
	
	</select>
	

</mapper>