<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ReviewMapper">

<resultMap type="review" id="review-resultmap">
	<id column="review_num" property="reviewNum"/>
	<result column = "address" property="address"/>
	<result column = "store_name" property="storeName"/>
	<result column = "email" property="email"/>
	<result column = "title" property="title"/>
	<result column = "content" property="content"/>
	<result column = "ratings" property="ratings"/>
	<result column = "ups" property="ups"/>
	<result column = "downs" property="downs"/>
	<result column = "pos_x" property="posX"/>
	<result column = "pos_y" property="posY"/>
</resultMap>


<resultMap type="review" id="review-join-menu-resultmap" extends="review-resultmap">
	<collection property="menuList" ofType="menu">
		<id column="menu_num" property="menuNum"/>
		<result column="menu_name" property="menuName"/>
		
			<collection property="mtList" ofType="MenuTaste">
				<result column="menu_num" property="menuNum"/>
				<result column="td_num" property="tdNum"/>
				<association property="allTaste" javaType="allTaste">
						<id column="td_num" property="tdNum"/>
						<result column="taste_num" property="tasteNum"/>
						<result column="degree_num" property="degreeNum"/>
						<association property="taste" javaType="taste">
							<id column="taste_num" property="tasteNum"/>
							<result column="taste_name" property="tasteName"/>
						</association>
						<association property="degree" javaType="degree">
							<id column="degree_num" property="degreeNum"/>
							<result column="degree" property="degree"/>
						</association>
						
				</association>
			</collection>
	</collection>
</resultMap>


<resultMap type="review" id="review-join-menu-photo-resultmap" extends="review-join-menu-resultmap">

	<collection property="reviewPhotoList" ofType="reviewPhoto">
		<result column="photo_num" property="photoNum"/>
		<result column="review_num" property="reviewNum"/>
		<collection property="photoList" ofType="photo">
				<id column="photo_num" property="photoNum"/>
				<result column="photo_path" property="photoPath"/>
		</collection>
	</collection>

</resultMap>





<select id="selectReviewByAddress" parameterType="String" resultMap="review-join-menu-resultmap">
	select *
	from review r, menu m, menu_taste mt, all_taste at, taste t, degree d 
	where address = #{value}
	and r.review_num=m.review_num(+)
	and m.menu_num=mt.menu_num(+)
	and mt.td_num=at.td_num(+)
	and at.taste_num=t.taste_num(+)
	and at.degree_num=d.degree_num(+) 
</select>


<select id="selectReviewByEmail" parameterType="String" resultMap="review-join-menu-resultmap">
	select *
	from review r, menu m, menu_taste mt, all_taste at, taste t, degree d 
	where email = #{value}
	and r.review_num=m.review_num(+)
	and m.menu_num=mt.menu_num(+)
	and mt.td_num=at.td_num(+)
	and at.taste_num=t.taste_num(+)
	and at.degree_num=d.degree_num(+) 
</select>

<!-- 
<insert id="insertReview" parameterType="map">
insert into review (review_num, title, address) values (review_num_seq.nextval, #{title}, #{address})
</insert> -->

<insert id="insertReview" parameterType="review">
insert into review values (review_num_seq.nextval, #{address},#{storeName},#{email},#{title},#{content},
#{ratings},#{ups},#{downs},#{posX},#{posY})
</insert>


<insert id="insertMenu" parameterType="string"> <!-- title말고 다른것들은?? -->
insert into menu values (menu_num_seq.nextval, review_num_seq.currval,#{value})
</insert>

<insert id="insertMenuTaste">
insert into menu_taste values (td_num_seq.currval, menu_num_seq.currval)
</insert>


<!-- 리뷰삭제 -->
<delete id="deleteReview" parameterType="String">
	DELETE FROM review WHERE email = #{email}
</delete>

<!-- 리뷰수정 -->
<update id="updateReview" parameterType="Review">
	UPDATE review
	SET    review_num = #{reviewNum},
		   address = #{address},
		   store_name = #{storeName},
		   email = #{email},
		   title = #{title},
		   content = #{content},
		   ratings = #{ratings},
		   ups = #{ups},
		   downs = #{downs},
		   pos_x = #{posX},
		   pos_y = #{posY}
</update>

<!-- 리뷰 당 추천 수  -->
<update id="updateReviewUpsDowns" parameterType="Review">
	UPDATE review
	SET	   ups = #{ups},
		   downs = #{downs}
	WHERE  review_num = #{reviewNum}
</update>

 <select id="selectReviewByNum" parameterType="int" resultMap="review-join-menu-photo-resultmap">

select * 
from review r, menu m, menu_taste mt, all_taste at, taste t, degree d, review_photo rp, photo p 
where r.review_num=#{value}
and r.review_num=m.review_num(+)
	and m.menu_num=mt.menu_num(+)
	and mt.td_num=at.td_num(+)
	and at.taste_num=t.taste_num(+)
	and at.degree_num=d.degree_num(+) 
	and r.review_num=rp.review_num(+)
	and rp.photo_num=p.photo_num(+)
order by m.menu_num, mt.td_num, p.photo_num asc


</select>
 

</mapper>